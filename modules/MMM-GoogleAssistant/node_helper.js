const exec=require("child_process").exec,fs=require("fs"),path=require("path"),Assistant=require("./components/assistant.js"),ScreenParser=require("./components/screenParser.js"),{getPlatform:getPlatform}=require("./components/platform.js"),isPi=require("detect-rpi");logGA=(...e)=>{},logEXT=(...e)=>{};var NodeHelper=require("node_helper");module.exports=NodeHelper.create({start:function(){this.EXT={},this.config={},this.volumeScript={OSX:"osascript -e 'set volume output volume #VOLUME#'",ALSA:"amixer sset -M 'PCM' #VOLUME#%",ALSA_HEADPHONE:"amixer sset -M 'Headphone' #VOLUME#%",ALSA_HDMI:"amixer sset -M 'HDMI' #VOLUME#%","HIFIBERRY-DAC":"amixer sset -M 'Digital' #VOLUME#%",PULSE:"amixer set Master #VOLUME#% -q",RESPEAKER_SPEAKER:"amixer -M sset Speaker #VOLUME#%",RESPEAKER_PLAYBACK:"amixer -M sset Playback #VOLUME#%"},this.PiVersion=!1,this.blank={},this.timeout=null,this.retry=null,this.YouTube=null,this.YT=0,this.checkConfigMerge(),this.retryPlayerCount=0,this.PLATFORM_RECORDER=new Map,this.PLATFORM_RECORDER.set("linux","arecord"),this.PLATFORM_RECORDER.set("mac","sox"),this.PLATFORM_RECORDER.set("raspberry-pi","arecord"),this.PLATFORM_RECORDER.set("windows","sox")},socketNotificationReceived:function(e,t){switch(e){case"INIT":console.log("[GA] MMM-GoogleAssistant Version:",require("./package.json").version,"rev:",require("./package.json").rev),this.initialize(t);break;case"ACTIVATE_ASSISTANT":this.activateAssistant(t);break;case"SHELLEXEC":var s=t.command;if(!s)return console.log("[GA] ShellExec: no command to execute!");s+=t.options?" "+t.options:"",exec(s,((e,o,i)=>{logGA("ShellExec command:",s),e&&(console.log("[GA] ShellExec Error:"+e),this.sendSocketNotification("WARNING",{message:"ShellExecError"})),logGA("SHELLEXEC_RESULT",{executed:t,result:{error:e,stdOut:o,stdErr:i}})}));break;case"YouTube_SEARCH":t&&this.YoutubeSearch(t);break;case"VOLUME_SET":this.config.Extented.volume.useVolume?this.setVolume(t):this.sendSocketNotification("WARNING",{message:"VolumeDisabled"});break;case"SCREEN_LOCK":this.screen&&(t?this.screen.lock():this.screen.unlock());break;case"SCREEN_STOP":this.screen&&this.screen.stop();break;case"SCREEN_RESET":this.screen&&this.screen.reset();break;case"SCREEN_WAKEUP":this.screen&&this.screen.wakeup();break;case"SCREEN_FORCE_END":this.screen&&this.screen.forceEnd();break;case"SPOTIFY_RETRY_PLAY":clearTimeout(this.timeout),this.timeout=null,clearTimeout(this.retry),this.retry=null,this.retry=setTimeout((()=>{this.spotify.play(t,((e,s,o)=>{if(404==e&&"NO_ACTIVE_DEVICE"==o.error.reason&&(logEXT("[SPOTIFY] RETRY playing..."),this.socketNotificationReceived("SPOTIFY_PLAY",t)),204!==e&&202!==e)return"Librespot"==this.config.Extented.spotify.player.type&&this.sendSocketNotification("WARNING",{message:"LibrespotNoResponse",values:this.config.Extented.deviceName}),"Raspotify"==this.config.Extented.spotify.player.type&&this.sendSocketNotification("WARNING",{message:"RaspotifyNoResponse",values:this.config.Extented.deviceName}),console.log("[SPOTIFY:PLAY] RETRY Error",e,s,o);logEXT("[SPOTIFY] RETRY: DONE_PLAY"),this.retryPlayerCount=0,"Librespot"==this.config.Extented.spotify.player.type&&this.sendSocketNotification("INFORMATION",{message:"LibrespotConnected",values:this.config.Extented.deviceName}),"Raspotify"==this.config.Extented.spotify.player.type&&this.sendSocketNotification("INFORMATION",{message:"RaspotifyConnected",values:this.config.Extented.deviceName})}))}),3e3);break;case"SPOTIFY_PLAY":this.spotify.play(t,((e,s,o)=>{if(clearTimeout(this.timeout),this.timeout=null,404==e&&"NO_ACTIVE_DEVICE"==o.error.reason){if(this.retryPlayerCount++,this.retryPlayerCount>=4)return this.retryPlayerCount=0;"Librespot"==this.config.Extented.spotify.player.type&&(console.log("[SPOTIFY] No response from librespot !"),this.sendSocketNotification("INFORMATION",{message:"LibrespotConnecting"}),this.Librespot(!0),this.timeout=setTimeout((()=>{this.socketNotificationReceived("SPOTIFY_TRANSFER",this.config.Extented.deviceName),this.socketNotificationReceived("SPOTIFY_RETRY_PLAY",t)}),3e3)),"Raspotify"==this.config.Extented.spotify.player.type&&(console.log("[SPOTIFY] No response from raspotify !"),this.sendSocketNotification("INFORMATION",{message:"RaspotifyConnecting"}),this.Raspotify(!0),this.timeout=setTimeout((()=>{this.socketNotificationReceived("SPOTIFY_TRANSFER",this.config.Extented.deviceName),this.socketNotificationReceived("SPOTIFY_RETRY_PLAY",t)}),3e3))}if(204!==e&&202!==e)return console.log("[SPOTIFY:PLAY] Error",e,o);logEXT("[SPOTIFY] DONE_PLAY"),this.retryPlayerCount=0}));break;case"SPOTIFY_VOLUME":this.spotify.volume(t,((e,s,o)=>{204!==e?console.log("[SPOTIFY:VOLUME] Error",e,o):(this.sendSocketNotification("DONE_SPOTIFY_VOLUME",t),logEXT("[SPOTIFY] DONE_VOLUME:",t))}));break;case"SPOTIFY_PAUSE":this.spotify.pause(((e,t,s)=>{204!==e&&202!==e?console.log("[SPOTIFY:PAUSE] Error",e,s):logEXT("[SPOTIFY] DONE_PAUSE")}));break;case"SPOTIFY_TRANSFER":this.spotify.transferByName(t,((e,t,s)=>{204!==e&&202!==e?console.log("[SPOTIFY:TRANSFER] Error",e,s):logEXT("[SPOTIFY] DONE_TRANSFER")}));break;case"SPOTIFY_STOP":"Librespot"==this.config.Extented.spotify.player.type&&this.LibrespotRestart(),"Raspotify"==this.config.Extented.spotify.player.type&&this.Raspotify(!0);break;case"SPOTIFY_NEXT":this.spotify.next(((e,t,s)=>{204!==e&&202!==e?console.log("[SPOTIFY:NEXT] Error",e,s):logEXT("[SPOTIFY] DONE_NEXT")}));break;case"SPOTIFY_PREVIOUS":this.spotify.previous(((e,t,s)=>{204!==e&&202!==e?console.log("[SPOTIFY:PREVIOUS] Error",e,s):logEXT("[SPOTIFY] DONE_PREVIOUS")}));break;case"SPOTIFY_SHUFFLE":this.spotify.shuffle(t,((e,t,s)=>{204!==e&&202!==e?console.log("[SPOTIFY:SHUFFLE] Error",e,s):logEXT("[SPOTIFY] DONE_SHUFFLE")}));break;case"SPOTIFY_REPEAT":this.spotify.repeat(t,((e,t,s)=>{204!==e&&202!==e?console.log("[SPOTIFY:REPEAT] Error",e,s):logEXT("[SPOTIFY] DONE_REPEAT")}));break;case"SEARCH_AND_PLAY":logEXT("[SPOTIFY] Search and Play",t),this.searchAndPlay(t.query,t.condition);break;case"VLC_YOUTUBE":this.playWithVlc(t);break;case"YT_STOP":this.CloseVlc();break;case"YT_VOLUME":this.VolumeVLC(t);break;case"MUSIC_PLAY":this.PlayMusic();break;case"MUSIC_STOP":this.StopMusic();break;case"MUSIC_PAUSE":this.PauseMusic();break;case"MUSIC_NEXT":this.NextMusic();break;case"MUSIC_PREVIOUS":this.PreviousMusic();break;case"MUSIC_VOLUME_TARGET":this.config.Extented.music.maxVolume=t,this.VolumeNewMax(t);case"MUSIC_VOLUME":this.VolumeMusic(t);break;case"MUSIC_REBUILD":this.RebuildMusic();break;case"MUSIC_SWITCH":this.SwitchMusic();break;case"RESTART":this.pm2Restart(t);break;case"GP_MORE_PICTS":case"GP_LOAD_FAIL":this.photos&&this.photos.prepAndSendChunk(Math.ceil(12e5/this.config.Extented.photos.displayDelay))}},tunnel:function(e){this.sendSocketNotification("TUNNEL",e)},activateAssistant:function(e){logGA("ASSISTANT_QUERY:",e);var t=Object.assign({},this.config.assistantConfig);t.debug=this.config.debug,t.lang=e.lang,t.useScreenOutput=e.useResponseOutput,t.useAudioOutput=e.useAudioOutput,t.micConfig=this.config.micConfig,this.assistant=new Assistant(t,(e=>{this.tunnel(e)}));var s={responseOutputCSS:this.config.responseConfig.responseOutputCSS,responseOutputURI:"tmp/responseOutput.html",responseOutputZoom:this.config.responseConfig.zoom.responseOutput},o=new ScreenParser(s,this.config.debug);this.assistant.activate(e,(t=>{t.lastQuery=e,t.screen||t.audio||(t.audio||t.screen||t.text||(t.error.error="NO_RESPONSE"),t.transcription&&t.transcription.transcription&&!t.transcription.done&&(t.error.error="TRANSCRIPTION_FAILS")),t&&t.error.audio&&!t.error.message&&(t.error.error="TOO_SHORT"),t.screen?o.parse(t,(e=>{delete e.screen.originalContent,logGA("ASSISTANT_RESULT",e),this.sendSocketNotification("ASSISTANT_RESULT",e)})):(logGA("ASSISTANT_RESULT",t),this.sendSocketNotification("ASSISTANT_RESULT",t))}))},checkConfigMerge:function(){console.log("[GA] Read config.js and check ConfigDeepMerge...");let e=path.resolve(__dirname,"../../config/config.js");fs.existsSync(e)&&(MMConfig=require(e));let t=MMConfig.modules.find((e=>"MMM-GoogleAssistant"==e.module));t.configDeepMerge||(console.error("[FATAL] MMM-GoogleAssistant Module Configuration Error: ConfigDeepMerge is not actived !"),console.error("[GA] Please review your MagicMirror config.js file!"),process.exit(1)),console.log("[GA] Perfect ConfigDeepMerge activated!"),t.dev&&(this.blank.dev=!0,console.log("[GA] Hi, developer!"))},initialize:async function(e){this.config=e,this.config.assistantConfig.modulePath=__dirname;var t=null;this.config.debug&&(logGA=(...e)=>{console.log("[GA]",...e)},logEXT=(...e)=>{console.log("[GA:EXT]",...e)});let s,o={version:require("./package.json").version,rev:require("./package.json").rev};if(!fs.existsSync(this.config.assistantConfig.modulePath+"/credentials.json"))return t="[FATAL] Assistant: credentials.json file not found !",this.DisplayError(t,{message:"GAErrorCredentials"});if(!fs.existsSync(this.config.assistantConfig.modulePath+"/tokens/tokenGA.json"))return t="[FATAL] Assistant: tokenGA.json file not found !",this.DisplayError(t,{message:"GAErrorTokenGA"});try{s=getPlatform()}catch(t){return console.error("[GA] Google Assistant does not support this platform. Supported platforms include macOS (x86_64), Windows (x86_64), Linux (x86_64), and Raspberry Pi"),void process.exit(1)}let i=this.PLATFORM_RECORDER.get(s);console.log(`[GA] Platform: '${s}'; attempting to use '${i}' to access microphone ...`),this.config.micConfig.recorder=i;let n=await this.getVersion()<4?"[Force]":"",r=await this.loadBugsounetLibrary();if(r?(console.error("[GA] Warning:",r,"@bugsounet library not loaded !"),console.error("[GA] Try to solve it with `npm run rebuild` in GA directory")):console.log("[GA] All needed @bugsounet library loaded !"),!this.PiVersion)return setTimeout((()=>{console.error("[GA][FATAL] This version of MMM-GoogleAssistant is not compatible for your system!"),console.error("[GA][FATAL] Use `npm run light` inside MMM-GoogleAssistant directory"),process.exit(1)}),1e4),this.sendSocketNotification("NOT_INITIALIZED",{message:"[FATAL] This version is not compatible for your system!",values:255});if(console.log("[GA:EXT]"+n+" Extented Display Server Starts..."),await this.Extented(),console.log("[GA:EXT]"+n+" Extented Display is initialized."),this.config.Extented.youtube.useYoutube)try{const e=this.EXT.readJson(this.config.assistantConfig.modulePath+"/credentials.json"),t=this.EXT.readJson(this.config.assistantConfig.modulePath+"/tokens/tokenYT.json");this.EXT.YouTubeAPI.authenticate({type:"oauth",client_id:e.installed.client_id,client_secret:e.installed.client_secret,redirect_url:e.installed.redirect_uris,access_token:t.access_token,refresh_token:t.refresh_token});console.log("[GA] YouTube Search Function initilized.")}catch(e){return console.log("[GA] "+e),t="[FATAL] Youtube: tokenYT.json file not found !",this.DisplayError(t,{message:"GAErrorTokenYoutube",values:"tokenYT.json"})}if(this.config.Extented.volume.useVolume){if(!(e=>null!=e)(this.volumeScript[this.config.Extented.volume.volumePreset]))return this.DisplayError("VolumePreset error",{message:"VolumePresetError"})}if(this.loadRecipes((()=>this.sendSocketNotification("INITIALIZED",o))),this.config.NPMCheck.useChecker&&this.EXT.npmCheck){var c={dirName:__dirname,moduleName:this.name,timer:this.config.NPMCheck.delay,debug:this.config.debug};this.Checker=new this.EXT.npmCheck(c,(e=>this.sendSocketNotification("NPM_UPDATE",e)))}console.log("[GA] Google Assistant is initialized.")},loadRecipes:function(e=(()=>{})){if(this.config.recipes){let n=(e,t)=>"function"==typeof t?"__FUNC__"+t.toString():t;for(var t=this.config.recipes,s=null,o=0;o<t.length;o++)try{var i=require("./recipes/"+t[o]).recipe;this.sendSocketNotification("LOAD_RECIPE",JSON.stringify(i,n,2)),console.log("[GA] RECIPE_LOADED:",t[o])}catch(e){return s=`[FATAL] RECIPE_ERROR (${t[o]})`,this.DisplayError(s,{message:"GAErrorRecipe",values:t[o]},e)}e()}else logGA("NO_RECIPE_TO_LOAD"),e()},YoutubeSearch:async function(e){try{var t=(await this.EXT.YouTubeAPI.search.list({q:e,part:"snippet",maxResults:1,type:"video"})).data.items[0],s=this.EXT.he.decode(t.snippet.title);console.log("[GA] Found YouTube Title: %s - videoId: %s",s,t.id.videoId),this.sendSocketNotification("YouTube_RESULT",t.id.videoId),this.sendSocketNotification("INFORMATION",{message:"YouTubePlaying",values:s})}catch(e){console.log("[GA] YouTube Search error: ",e.toString()),this.sendSocketNotification("WARNING",{message:"YouTubeError",values:e.toString()})}},DisplayError:function(e,t,s=null){return s?console.log("[GA][ERROR]"+e,s.message,s):console.log("[GA][ERROR]"+e),this.sendSocketNotification("NOT_INITIALIZED",{message:t.message,values:t.values})},getVersion:function(){return new Promise((e=>{var t=null;isPi()?exec("cat /sys/firmware/devicetree/base/model",((s,o,i)=>{if(null==s){var n=(r=o.trim()).split(" ");n.splice(3,10);let s=n.join(" ");console.log("[GA] Detected:",s);var r=(n=n.slice(2,3)).join();t=parseInt(r)?parseInt(r):0,this.PiVersion=!!(t>=4||this.blank.dev),e(this.blank.dev?999:t)}else console.log("[GA] Error Can't determinate RPI version!"),this.PiVersion=!!this.blank.dev,e(1)})):(console.log("[GA] You are not using a pi :)"),this.PiVersion=!0,e(999))}))},Extented:function(){var e={sendSocketNotification:(e,t)=>{this.sendSocketNotification(e,t)},screen:e=>{this.screen&&"WAKEUP"==e&&this.screen.wakeup()},governor:e=>{this.governor&&"GOVERNOR_SLEEPING"==e&&this.governor.sleeping(),this.governor&&"GOVERNOR_WORKING"==e&&this.governor.working(),this.governor&&e.error&&this.sendSocketNotification("WARNING",{message:"GovernorError",values:e.error})},pir:(e,t)=>{this.screen&&this.pir&&"PIR_DETECTED"==e&&this.screen.wakeup(),this.screen&&this.pir&&"PIR_ERROR"==e&&this.sendSocketNotification("WARNING",{message:"PirError",values:t.code})}};if(this.config.Extented.screen.useScreen&&this.EXT.Screen&&(logEXT("Starting Screen module..."),this.screen=new this.EXT.Screen(this.config.Extented.screen,e.sendSocketNotification,this.config.debug,e.sendSocketNotification,e.governor),this.screen.activate()),this.config.Extented.pir.usePir&&this.EXT.Pir&&(logEXT("Starting Pir module..."),this.pir=new this.EXT.Pir(this.config.Extented.pir,e.pir,this.config.debug),this.pir.start()),this.config.Extented.governor.useGovernor&&this.EXT.Governor&&(logEXT("Starting Governor module..."),this.governor=new this.EXT.Governor(this.config.Extented.governor,e.governor,this.config.debug),this.governor.start()),this.config.Extented.internet.useInternet&&this.EXT.Internet&&(logEXT("Starting Internet module..."),this.internet=new this.EXT.Internet(this.config.Extented.internet,e.sendSocketNotification,this.config.debug),this.internet.start()),this.config.Extented.cast.useCast&&this.EXT.CastServer&&(logEXT("Starting Cast module..."),this.config.Extented.deviceName?(this.config.Extented.cast.castName=this.config.Extented.deviceName,this.cast=new this.EXT.CastServer(this.config.Extented.cast,e.sendSocketNotification,this.config.debug),this.cast.start()):this.sendSocketNotification("WARNING",{message:"Cast: deviceName error"})),this.config.Extented.spotify.useSpotify&&this.EXT.Spotify){logEXT("Starting Spotify module...");try{this.spotify=new this.EXT.Spotify(this.config.Extented.spotify.visual,e.sendSocketNotification,this.config.debug),this.spotify.start()}catch(e){console.log("[EXT] Spotify "+e),error="Spotify: tokenSpotify.json file not found !",this.sendSocketNotification("WARNING",{message:error})}"Librespot"==this.config.Extented.spotify.player.type?(console.log("[SPOTIFY] Launch Librespot..."),this.Librespot(!0)):"Raspotify"==this.config.Extented.spotify.player.type?(this.raspotify=new this.EXT.Systemd("raspotify"),console.log("[SPOTIFY] Launch Raspotify..."),this.Raspotify(!0)):console.log("[SPOTIFY] No player activated.")}if(this.config.Extented.photos.usePhotos&&this.config.Extented.photos.useGooglePhotosAPI&&this.EXT.GPhotos){logEXT("Starting GooglePhotosAPI module...");try{this.config.Extented.photos.CREDENTIALS=this.config.assistantConfig.modulePath+"/credentials.json",this.config.Extented.photos.TOKEN=this.config.assistantConfig.modulePath+"/tokens/tokenGP.json",this.config.Extented.photos.CACHE=this.config.assistantConfig.modulePath+"/tmp",this.photos=new this.EXT.GPhotos(this.config.Extented.photos,this.config.debug,e.sendSocketNotification),this.photos.start()}catch(e){console.log("[EXT] Google Photos "+e),error="Google Photos: tokenGP.json file not found !",this.sendSocketNotification("WARNING",{message:error})}}if(this.config.Extented.music.useMusic){logEXT("Starting Music module...");try{this.config.Extented.music.modulePath=this.config.assistantConfig.modulePath,this.music=new this.EXT.MusicPlayer(this.config.Extented.music,this.config.debug,e),this.music.start()}catch(e){console.log("[EXT] Music "+e)}}},Librespot:function(e=!1){var t=path.resolve(__dirname,"components/librespot/target/release","librespot"),s=__dirname+"/components/librespot/cache";if(!fs.existsSync(t))return console.log("[LIBRESPOT] librespot is not installed !"),void this.sendSocketNotification("WARNING",{message:"LibrespotNoInstalled"});this.EXT.pm2.connect((o=>{if(o)return console.log(o);console.log("[PM2] Connected!"),this.EXT.pm2.list(((o,i)=>{if(o)return console.log(o);if(i&&Object.keys(i).length>0)for(let[t,s]of Object.entries(i))if("librespot"==s.name&&s.pid){let t=!1;return e&&this.EXT.pm2.delete("librespot",(e=>{e?console.log("[PM2] Librespot Process not found"):(console.log("[PM2] Librespot Process deleted! (refreshing ident)"),t=!0,this.Librespot())})),t?void 0:console.log("[PM2] librespot already launched")}this.EXT.pm2.start({script:t,name:"librespot",out_file:"/dev/null",args:["-n",this.config.Extented.deviceName,"-u",this.config.Extented.spotify.player.email,"-p",this.config.Extented.spotify.player.password,"--initial-volume",this.config.Extented.spotify.player.maxVolume,"-c",s]},((e,t)=>{if(e)return this.sendSocketNotification("WARNING",{message:"LibrespotError",values:e.toString()}),void console.log("[LIBRESPOT] "+e);console.log("[PM2] Librespot started !")}))}))})),process.on("exit",(e=>{this.EXT.pm2.stop("librespot",((e,t)=>{console.log("[LIBRESPOT] Killed")}))}))},LibrespotRestart(){this.EXT.pm2.restart("librespot",((e,t)=>{e?console.log("[PM2] librespot error: "+e):logEXT("[PM2] Restart librespot")}))},Raspotify:async function(e=!1){if(!this.raspotify)return this.sendSocketNotification("WARNING",{message:"RaspotifyError",values:"systemd library error"}),console.log("[RASPOTIFY] systemd library error!");const t=await this.raspotify.status();if(t.error)return this.sendSocketNotification("WARNING",{message:"RaspotifyNoInstalled"}),console.error("[RASPOTIFY] Error: Raspotify is not installed!");if("running"==t.state&&!e)return console.log("[RASPOTIFY] Raspotify already running");console.log("[RASPOTIFY] Raspotify Force Restart");(await this.raspotify.restart()).error&&(this.sendSocketNotification("WARNING",{message:"RaspotifyError",values:"restart failed!"}),console.log("[RASPOTIFY] Error when restart Raspotify!"))},searchAndPlay:function(e,t){e.type?e.type=e.type.replace(/\s/g,""):e.type="artist,track,album,playlist",e.q||(e.q="something cool");var s=(e,t,s)=>{var o={},i=t?e[Math.floor(Math.random()*e.length)]:e[0];return i.uri?(o[s]="uris"==s?[i.uri]:i.uri,o):(console.log("[SPOTIFY] Unplayable item: ",i),!1)};this.spotify.search(e,((e,o,i)=>{var n=null;if(200==e){const e={tracks:"uris",artists:"context_uri",albums:"context_uri",playlists:"context_uri"};for(var r in e)if(e.hasOwnProperty(r)&&!n){var c=e[r];i[r]&&i[r].items.length>1&&(n=s(i[r].items,t.random,c))}n&&t.autoplay?(logEXT("[SPOTIFY] Search and Play Result:",n),this.socketNotificationReceived("SPOTIFY_PLAY",n)):(logEXT("[SPOTIFY] Search and Play No Result"),this.sendSocketNotification("WARNING",{message:"SpotifyNoResult"}))}else console.log("[GA:EXT] [SPOTIFY] Search and Play failed !"),this.sendSocketNotification("WARNING",{message:"SpotifySearchFailed"})}))},setVolume:function(e){var t=(this.config.Extented.volume.myScript?this.config.Extented.volume.myScript:this.volumeScript[this.config.Extented.volume.volumePreset]).replace("#VOLUME#",e);exec(t,((t,s,o)=>{t?(console.log("[GA:EXT] Set Volume Error:",t.toString()),this.sendSocketNotification("WARNING",{message:"VolumePresetError"})):(logEXT("[VOLUME] Set Volume To:",e),this.sendSocketNotification("VOLUME_DONE",e),this.sendSocketNotification("INFORMATION",{message:"Volume",values:e+"%"}))}))},playWithVlc:function(e){this.YT++,this.YouTube&&this.CloseVlc(),this.YouTube=new this.EXT.cvlc,this.YouTube.play(e,(()=>{logEXT("[YouTube] Found link:",e),this.YouTube&&this.YouTube.cmd("volume "+this.config.Extented.youtube.maxVolume)}),(()=>{this.YT--,this.YT<0&&(this.YT=0),logEXT("[YouTube] Video ended #"+this.YT),0==this.YT&&(logEXT("[YouTube] Finish !"),this.sendSocketNotification("FINISH_YOUTUBE"),this.YouTube=null)}))},CloseVlc:function(){this.YouTube?(logEXT("[YouTube] Force Closing VLC..."),this.YouTube.destroy(),this.YouTube=null,logEXT("[YouTube] Done Closing VLC...")):logEXT("[YouTube] Not running!")},VolumeVLC:function(e){this.YouTube&&(logEXT("[YouTube] Set VLC Volume to:",e),this.YouTube.cmd("volume "+e))},StopMusic:function(){this.music&&this.music.setStop()},PlayMusic:function(){this.music.setPlay()},PauseMusic:function(){this.music&&this.music.setPause()},PreviousMusic:function(){this.music&&this.music.setPrevious()},NextMusic:function(){this.music&&this.music.setNext()},VolumeNewMax:function(e){this.music.setNewMax(this.config.Extented.music.maxVolume)},VolumeMusic:function(e){this.music&&this.music.setVolume(e)},RebuildMusic:function(){this.music.rebuild()},SwitchMusic:function(){this.music.setSwitch()},pm2Restart:function(e){exec("pm2 restart "+e,((t,s,o)=>{t?console.log("[GA:EXT:PM2] "+t):logEXT("[PM2] Restart",e)}))},loadBugsounetLibrary:function(){let e=[{"@bugsounet/npmcheck":["npmCheck","NPMCheck.useChecker",!0]},{"@bugsounet/screen":["Screen","Extented.screen.useScreen",!1]},{"@bugsounet/pir":["Pir","Extented.pir.usePir",!1]},{"@bugsounet/governor":["Governor","Extented.governor.useGovernor",!1]},{"@bugsounet/internet":["Internet","Extented.internet.useInternet",!1]},{"@bugsounet/cast":["CastServer","Extented.cast.useCast",!1]},{"@bugsounet/cvlc":["cvlc","Extented.youtube.useVLC",!1]},{"@bugsounet/google-photos":["GPhotos","Extented.photos.useGooglePhotosAPI",!1]},{"@bugsounet/spotify":["Spotify","Extented.spotify.useSpotify",!1]},{"@bugsounet/systemd":["Systemd","Extented.spotify.useSpotify",!1]},{"@bugsounet/cvlcmusicplayer":["MusicPlayer","Extented.music.useMusic",!1]},{pm2:["pm2","Extented.spotify.useSpotify",!1]},{"youtube-api":["YouTubeAPI","Extented.youtube.useYoutube",!1]},{he:["he","Extented.youtube.useYoutube",!1]},{"r-json":["readJson","Extented.youtube.useYoutube",!1]}],t=0;return new Promise((s=>{e.forEach((e=>{for(const[s,o]of Object.entries(e)){let e=s,i=o[0],n=o[1],r=o[2],c=(e,t)=>e[t];if(!r&&this.PiVersion&&(r=!0),r&&n.split(".").reduce(c,this.config))try{this.EXT[i]||(this.EXT[i]=require(e),logGA("Loaded "+e))}catch(s){console.error("[GA]",e,"Loading error!",s),this.sendSocketNotification("WARNING",{message:"LibraryError",values:e}),t++}}})),s(t)}))}});